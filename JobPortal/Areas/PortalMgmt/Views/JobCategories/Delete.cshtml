@model JobPortal.Models.JobCategory

@{
    ViewData["Title"] = "Delete";
}

@using Microsoft.AspNetCore.Identity
@using JobPortal.Models.Enums

@*----- to find if user is logged in *@
@inject SignInManager<IdentityUser> _signInManager

@*----- gets the user object to see properties, roles *@
@inject UserManager<IdentityUser> _userManager

@{
    bool isLoggedIn = _signInManager.IsSignedIn(this.User);

    bool isUserAdmin = false;
    IdentityUser user = await _userManager.GetUserAsync(this.User);         // gets the Logged In User
    if (user != null)
    {
        isUserAdmin = await _userManager.IsInRoleAsync(user, MyIdentityRoleNames.PortalAdmin.ToString());
    }

}
@if (isLoggedIn && isUserAdmin)
{
    <h1>Delete</h1>

    <h3>Are you sure you want to delete this?</h3>
    <div>
        <h4>JobCategory</h4>
        <hr />
        <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.JobCategoryName)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.JobCategoryName)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
        </dl>

        <form asp-action="Delete">
            <input type="hidden" asp-for="JobCategoryId" />
            <input type="submit" value="Delete" class="btn btn-danger" /> |
            <a asp-action="Index">Back to List</a>
        </form>
    </div>
}
